-- MySQL Script generated by MySQL Workbench
-- Tue Sep 22 23:46:50 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema grasis
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `grasis` ;

-- -----------------------------------------------------
-- Schema grasis
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `grasis` DEFAULT CHARACTER SET utf8 ;
USE `grasis` ;

-- -----------------------------------------------------
-- Table `grasis`.`student`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`student` ;

CREATE TABLE IF NOT EXISTS `grasis`.`student` (
  `_id` INT NOT NULL AUTO_INCREMENT,
  `student_id` CHAR(8) NOT NULL,
  `username` VARCHAR(50) NOT NULL,
  `password` VARCHAR(40) NOT NULL,
  `firstname` VARCHAR(50) NOT NULL,
  `lastname` VARCHAR(50) NOT NULL,
  `gender` TINYINT NOT NULL,
  `school_year` CHAR(4) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `address` VARCHAR(100) NULL DEFAULT NULL,
  `phone` CHAR(10) NULL DEFAULT NULL,
  `status` TINYINT NOT NULL DEFAULT 1,
  `createTime` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updateTime` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`_id`),
  UNIQUE INDEX `_id_UNIQUE` (`_id` ASC) VISIBLE,
  UNIQUE INDEX `student_id_UNIQUE` (`student_id` ASC) VISIBLE,
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `grasis`.`lecturer_position`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`lecturer_position` ;

CREATE TABLE IF NOT EXISTS `grasis`.`lecturer_position` (
  `_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modify_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`_id`),
  UNIQUE INDEX `_id_UNIQUE` (`_id` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `grasis`.`lecturer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`lecturer` ;

CREATE TABLE IF NOT EXISTS `grasis`.`lecturer` (
  `_id` INT NOT NULL AUTO_INCREMENT,
  `lecturer_id` CHAR(4) NOT NULL,
  `username` VARCHAR(50) NOT NULL,
  `password` VARCHAR(40) NOT NULL,
  `firstname` VARCHAR(50) NOT NULL,
  `lastname` VARCHAR(50) NOT NULL,
  `gender` TINYINT NOT NULL,
  `level` CHAR(4) NOT NULL,
  `position` INT NULL,
  `email` VARCHAR(100) NOT NULL,
  `address` VARCHAR(100) NULL DEFAULT NULL,
  `phone` CHAR(10) NULL DEFAULT NULL,
  `status` TINYINT NOT NULL DEFAULT 1 COMMENT '0: inactive\n1: active',
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `modify_time` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`_id`),
  UNIQUE INDEX `_id_UNIQUE` (`_id` ASC) VISIBLE,
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  INDEX `fk_lecturer_position_idx` (`position` ASC) VISIBLE,
  UNIQUE INDEX `lecturer_id_UNIQUE` (`lecturer_id` ASC) VISIBLE,
  CONSTRAINT `fk_lecturer_lecturer_position`
    FOREIGN KEY (`position`)
    REFERENCES `grasis`.`lecturer_position` (`_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `grasis`.`thesis`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`thesis` ;

CREATE TABLE IF NOT EXISTS `grasis`.`thesis` (
  `_id` INT NOT NULL,
  `start_time` TIMESTAMP NOT NULL,
  `end_time` TIMESTAMP NOT NULL,
  `status` TINYINT NOT NULL DEFAULT 0,
  `lecturer_topic_register` TIMESTAMP NULL,
  `student_topic_register` TIMESTAMP NULL,
  `progress_report` TIMESTAMP NULL,
  `review` TIMESTAMP NULL,
  `defense` TIMESTAMP NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modify_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`_id`),
  UNIQUE INDEX `_id_UNIQUE` (`_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`topic`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`topic` ;

CREATE TABLE IF NOT EXISTS `grasis`.`topic` (
  `_id` INT NOT NULL AUTO_INCREMENT,
  `lecturer` INT NOT NULL,
  `title` TEXT NOT NULL,
  `description` TEXT NULL DEFAULT NULL,
  `status` TINYINT NOT NULL DEFAULT 0,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modify_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`_id`),
  FULLTEXT INDEX `idx_title` (`title`) VISIBLE,
  INDEX `fk_topic_lecturer_idx` (`lecturer` ASC) VISIBLE,
  CONSTRAINT `fk_topic_lecturer`
    FOREIGN KEY (`lecturer`)
    REFERENCES `grasis`.`lecturer` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`thesis_student`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`thesis_student` ;

CREATE TABLE IF NOT EXISTS `grasis`.`thesis_student` (
  `thesis` INT NOT NULL,
  `student` INT NOT NULL,
  `topic` INT NULL DEFAULT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modify_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`thesis`, `student`),
  INDEX `fk_thesis_student_student_idx` (`student` ASC) VISIBLE,
  INDEX `fk_thesis_student_thesis` (`thesis` ASC) VISIBLE,
  INDEX `fk_thesis_student_topic` (`topic` ASC) VISIBLE,
  CONSTRAINT `fk_thesis_student_thesis`
    FOREIGN KEY (`thesis`)
    REFERENCES `grasis`.`thesis` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_thesis_student_student`
    FOREIGN KEY (`student`)
    REFERENCES `grasis`.`student` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_thesis_student_topic`
    FOREIGN KEY (`topic`)
    REFERENCES `grasis`.`topic` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`thesis_lecturer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`thesis_lecturer` ;

CREATE TABLE IF NOT EXISTS `grasis`.`thesis_lecturer` (
  `thesis` INT NOT NULL,
  `lecturer` INT NOT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modify_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`thesis`, `lecturer`),
  INDEX `fk_thesis_lecturer_lecturer_idx` (`lecturer` ASC) VISIBLE,
  CONSTRAINT `fk_thesis_lecturer_thesis`
    FOREIGN KEY (`thesis`)
    REFERENCES `grasis`.`thesis` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_thesis_lecturer_lecturer`
    FOREIGN KEY (`lecturer`)
    REFERENCES `grasis`.`lecturer` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`thesis_topic`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`thesis_topic` ;

CREATE TABLE IF NOT EXISTS `grasis`.`thesis_topic` (
  `thesis` INT NOT NULL,
  `topic` INT NOT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modify_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`thesis`, `topic`),
  UNIQUE INDEX `idx_thesis_topic` (`thesis` ASC, `topic` ASC) VISIBLE,
  INDEX `fk_thesis_topic_topic_idx` (`topic` ASC) VISIBLE,
  CONSTRAINT `fk_thesis_topic_thesis`
    FOREIGN KEY (`thesis`)
    REFERENCES `grasis`.`thesis` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_thesis_topic_topic`
    FOREIGN KEY (`topic`)
    REFERENCES `grasis`.`topic` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`topic_request_state`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`topic_request_state` ;

CREATE TABLE IF NOT EXISTS `grasis`.`topic_request_state` (
  `_id` INT NOT NULL AUTO_INCREMENT,
  `topic_request` INT NOT NULL,
  `processor` INT NOT NULL,
  `comment` TEXT NULL DEFAULT NULL,
  `action` TINYINT NOT NULL DEFAULT 0 COMMENT '0: pending\n1: approve\n2: reject\n3: send back\n4: withdraw\n5: confirmed',
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`topic_request`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`topic_request` ;

CREATE TABLE IF NOT EXISTS `grasis`.`topic_request` (
  `_id` INT NOT NULL,
  `thesis` INT NOT NULL,
  `topic` INT NOT NULL,
  `current_state` INT NULL DEFAULT NULL,
  `status` TINYINT NOT NULL COMMENT '0: processing\n1: complete',
  `note` TEXT NULL DEFAULT NULL,
  `applicant` INT NOT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modify_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  INDEX `fk_topic_request_topic_idx` (`topic` ASC) VISIBLE,
  INDEX `fk_topic_request_topic_request_state_idx` (`current_state` ASC) VISIBLE,
  INDEX `fk_topic_request_leturer_idx` (`applicant` ASC) VISIBLE,
  PRIMARY KEY (`_id`),
  CONSTRAINT `fk_topic_request_thesis`
    FOREIGN KEY (`thesis`)
    REFERENCES `grasis`.`thesis` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_topic_request_topic`
    FOREIGN KEY (`topic`)
    REFERENCES `grasis`.`topic` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_topic_request_topic_request_state`
    FOREIGN KEY (`current_state`)
    REFERENCES `grasis`.`topic_request_state` (`_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_topic_request_leturer`
    FOREIGN KEY (`applicant`)
    REFERENCES `grasis`.`lecturer` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`topic_request_student`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`topic_request_student` ;

CREATE TABLE IF NOT EXISTS `grasis`.`topic_request_student` (
  `topic_request` INT NOT NULL,
  `student` INT NOT NULL,
  PRIMARY KEY (`topic_request`, `student`),
  INDEX `fk_topic_request_student_student_idx` (`student` ASC) VISIBLE,
  CONSTRAINT `fk_topic_request_student_topic_request`
    FOREIGN KEY (`topic_request`)
    REFERENCES `grasis`.`topic` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_topic_request_student_student`
    FOREIGN KEY (`student`)
    REFERENCES `grasis`.`student` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`register_topic_state`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`register_topic_state` ;

CREATE TABLE IF NOT EXISTS `grasis`.`register_topic_state` (
  `_id` INT NOT NULL AUTO_INCREMENT,
  `register_topic` INT NOT NULL,
  `processor` INT NOT NULL,
  `comment` TEXT NULL DEFAULT NULL,
  `action` TINYINT NOT NULL DEFAULT 0 COMMENT '0: pending\n1: approve\n2: reject\n3: send back\n4: withdraw\n5: confirmed',
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`_id`),
  INDEX `fk_register_topic_state_register_topic_idx` (`register_topic` ASC) VISIBLE,
  INDEX `fk_register_topic_state_lecturer_idx` (`processor` ASC) VISIBLE,
  CONSTRAINT `fk_register_topic_state_register_topic`
    FOREIGN KEY (`register_topic`)
    REFERENCES `grasis`.`register_topic` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_register_topic_state_lecturer`
    FOREIGN KEY (`processor`)
    REFERENCES `grasis`.`lecturer` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`register_topic`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`register_topic` ;

CREATE TABLE IF NOT EXISTS `grasis`.`register_topic` (
  `_id` INT NOT NULL AUTO_INCREMENT,
  `thesis` INT NOT NULL,
  `topic` INT NOT NULL,
  `current_state` INT NULL DEFAULT NULL,
  `status` TINYINT NOT NULL COMMENT '0: processing\n1: complete',
  `note` TEXT NULL DEFAULT NULL,
  `applicant` INT NOT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modify_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`_id`),
  INDEX `fk_register_topic_thesis_idx` (`thesis` ASC) VISIBLE,
  INDEX `fk_register_topic_topic_idx` (`topic` ASC) VISIBLE,
  INDEX `fk_register_topic_student_idx` (`applicant` ASC) VISIBLE,
  INDEX `fk_register_topic_register_topic_state_idx` (`current_state` ASC) VISIBLE,
  CONSTRAINT `fk_register_topic_thesis`
    FOREIGN KEY (`thesis`)
    REFERENCES `grasis`.`thesis` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_register_topic_topic`
    FOREIGN KEY (`topic`)
    REFERENCES `grasis`.`topic` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_register_topic_register_topic_state`
    FOREIGN KEY (`current_state`)
    REFERENCES `grasis`.`register_topic_state` (`_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_register_topic_student`
    FOREIGN KEY (`applicant`)
    REFERENCES `grasis`.`student` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`register_topic_student`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`register_topic_student` ;

CREATE TABLE IF NOT EXISTS `grasis`.`register_topic_student` (
  `register_topic` INT NOT NULL,
  `student` INT NOT NULL,
  PRIMARY KEY (`register_topic`, `student`),
  INDEX `fk_topic_request_student_student_idx` (`student` ASC) VISIBLE,
  CONSTRAINT `fk_register_topic_student_register_topic`
    FOREIGN KEY (`register_topic`)
    REFERENCES `grasis`.`register_topic` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_register_topic_student_student`
    FOREIGN KEY (`student`)
    REFERENCES `grasis`.`student` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`review_schedule`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`review_schedule` ;

CREATE TABLE IF NOT EXISTS `grasis`.`review_schedule` (
  `_id` INT NOT NULL AUTO_INCREMENT,
  `thesis` INT NOT NULL,
  `topic` INT NOT NULL,
  `time` TIMESTAMP NOT NULL,
  `place` TEXT NOT NULL,
  `note` TEXT NULL DEFAULT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modify_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`_id`),
  INDEX `fk_review_schedule_thesis_idx` (`topic` ASC) VISIBLE,
  CONSTRAINT `fk_review_schedule_thesis`
    FOREIGN KEY (`topic`)
    REFERENCES `grasis`.`thesis` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_review_schedule_topic`
    FOREIGN KEY (`topic`)
    REFERENCES `grasis`.`topic` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`review_schedule_file`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`review_schedule_file` ;

CREATE TABLE IF NOT EXISTS `grasis`.`review_schedule_file` (
  `_id` INT NOT NULL AUTO_INCREMENT,
  `review_schedule` INT NOT NULL,
  `filename` VARCHAR(50) NOT NULL,
  `path` VARCHAR(255) NOT NULL,
  `author` INT NOT NULL,
  `create_time` TIMESTAMP NOT NULL,
  `modify_time` TIMESTAMP NOT NULL,
  PRIMARY KEY (`_id`),
  INDEX `fk_review_file_review_schedule_idx` (`review_schedule` ASC) VISIBLE,
  INDEX `fk_review_file_student_idx` (`author` ASC) VISIBLE,
  CONSTRAINT `fk_review_schedule_file_review_schedule`
    FOREIGN KEY (`review_schedule`)
    REFERENCES `grasis`.`review_schedule` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_review_schedule_file_student`
    FOREIGN KEY (`author`)
    REFERENCES `grasis`.`student` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`review_schedule_comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`review_schedule_comment` ;

CREATE TABLE IF NOT EXISTS `grasis`.`review_schedule_comment` (
  `_id` INT NOT NULL AUTO_INCREMENT,
  `review_schedule` INT NOT NULL,
  `student` INT NULL DEFAULT NULL,
  `lecturer` INT NULL DEFAULT NULL,
  `content` TEXT NOT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modify_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`_id`),
  INDEX `fk_review_schedule_comment_review_schedule_idx` (`review_schedule` ASC) VISIBLE,
  INDEX `fk_review_schedule_comment_student_idx` (`student` ASC) VISIBLE,
  INDEX `fk_review_schedule_comment_lecturer_idx` (`lecturer` ASC) VISIBLE,
  CONSTRAINT `fk_review_schedule_comment_review_schedule`
    FOREIGN KEY (`review_schedule`)
    REFERENCES `grasis`.`review_schedule` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_review_schedule_comment_student`
    FOREIGN KEY (`student`)
    REFERENCES `grasis`.`student` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_review_schedule_comment_lecturer`
    FOREIGN KEY (`lecturer`)
    REFERENCES `grasis`.`lecturer` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`defense_council`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`defense_council` ;

CREATE TABLE IF NOT EXISTS `grasis`.`defense_council` (
  `_id` INT NOT NULL AUTO_INCREMENT,
  `thesis` INT NOT NULL,
  `chairman` INT NOT NULL,
  `commissioner` INT NOT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modify_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  INDEX `fk_defense_schedule_council_lecturer_chairman_idx` (`chairman` ASC) VISIBLE,
  INDEX `fk_defense_schedule_council_lecturer_commissioner_idx` (`commissioner` ASC) VISIBLE,
  PRIMARY KEY (`_id`),
  INDEX `fk_defense_schedule_council_thesis_idx` (`thesis` ASC) VISIBLE,
  CONSTRAINT `fk_defense_council_lecturer_chairman`
    FOREIGN KEY (`chairman`)
    REFERENCES `grasis`.`lecturer` (`_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_defense_council_lecturer_commissioner`
    FOREIGN KEY (`commissioner`)
    REFERENCES `grasis`.`lecturer` (`_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_defense_council_thesis`
    FOREIGN KEY (`thesis`)
    REFERENCES `grasis`.`thesis` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`defense_schedule`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`defense_schedule` ;

CREATE TABLE IF NOT EXISTS `grasis`.`defense_schedule` (
  `_id` INT NOT NULL AUTO_INCREMENT,
  `thesis` INT NOT NULL,
  `topic` INT NOT NULL,
  `council` INT NULL,
  `time` TIMESTAMP NOT NULL,
  `place` TEXT NOT NULL,
  `note` TEXT NULL DEFAULT NULL,
  `point` FLOAT NULL DEFAULT NULL,
  `result` TINYINT NULL DEFAULT NULL COMMENT '0: failed\n1: passed',
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modify_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`_id`),
  INDEX `fk_defense_schedule_thesis_idx` (`thesis` ASC) VISIBLE,
  INDEX `fk_defense_schedule_defense_schedule_council_idx` (`council` ASC) VISIBLE,
  CONSTRAINT `fk_defense_schedule_thesis`
    FOREIGN KEY (`thesis`)
    REFERENCES `grasis`.`thesis` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_defense_schedule_topic`
    FOREIGN KEY ()
    REFERENCES `grasis`.`topic` ()
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_defense_schedule_defense_council`
    FOREIGN KEY (`council`)
    REFERENCES `grasis`.`defense_council` (`_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`defense_schedule_student`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`defense_schedule_student` ;

CREATE TABLE IF NOT EXISTS `grasis`.`defense_schedule_student` (
  `defense_schedule` INT NOT NULL,
  `student` INT NOT NULL,
  PRIMARY KEY (`defense_schedule`, `student`),
  INDEX `fk_defense_schedule_student_student_idx` (`student` ASC) VISIBLE,
  CONSTRAINT `fk_defense_schedule_student_defense_schedule`
    FOREIGN KEY (`defense_schedule`)
    REFERENCES `grasis`.`defense_schedule` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_defense_schedule_student_student`
    FOREIGN KEY (`student`)
    REFERENCES `grasis`.`student` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`defense_schedule_file`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`defense_schedule_file` ;

CREATE TABLE IF NOT EXISTS `grasis`.`defense_schedule_file` (
  `_id` INT NOT NULL AUTO_INCREMENT,
  `defense_schedule` INT NOT NULL,
  `filename` VARCHAR(50) NOT NULL,
  `path` TEXT NOT NULL,
  `author` INT NOT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modify_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  INDEX `fk_defense_schedule_file_defense_schedule_idx` (`defense_schedule` ASC) VISIBLE,
  INDEX `fk_defense_schedule_file_student_idx` (`author` ASC) VISIBLE,
  CONSTRAINT `fk_defense_schedule_file_defense_schedule`
    FOREIGN KEY (`defense_schedule`)
    REFERENCES `grasis`.`defense_schedule` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_defense_schedule_file_student`
    FOREIGN KEY (`author`)
    REFERENCES `grasis`.`student` (`_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`defense_schedule_comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`defense_schedule_comment` ;

CREATE TABLE IF NOT EXISTS `grasis`.`defense_schedule_comment` (
  `_id` INT NOT NULL AUTO_INCREMENT,
  `defense_schedule` INT NOT NULL,
  `student` INT NOT NULL,
  `lecturer` INT NOT NULL,
  `content` TEXT NOT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modify_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`_id`),
  INDEX `fk_defense_schedule_comment_defense_schedule_idx` (`defense_schedule` ASC) VISIBLE,
  INDEX `fk_defense_schedule_comment_student_idx` (`student` ASC) VISIBLE,
  INDEX `fk_defense_schedule_comment_lecturer_idx` (`lecturer` ASC) VISIBLE,
  CONSTRAINT `fk_defense_schedule_comment_defense_schedule`
    FOREIGN KEY (`defense_schedule`)
    REFERENCES `grasis`.`defense_schedule` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_defense_schedule_comment_student`
    FOREIGN KEY (`student`)
    REFERENCES `grasis`.`student` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_defense_schedule_comment_lecturer`
    FOREIGN KEY (`lecturer`)
    REFERENCES `grasis`.`lecturer` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`review_schedule_student`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`review_schedule_student` ;

CREATE TABLE IF NOT EXISTS `grasis`.`review_schedule_student` (
  `review_schedule` INT NOT NULL,
  `student` INT NOT NULL,
  PRIMARY KEY (`review_schedule`, `student`),
  INDEX `fk_review_schedule_review_student_idx` (`student` ASC) VISIBLE,
  CONSTRAINT `fk_review_schedule_review_schedule`
    FOREIGN KEY (`review_schedule`)
    REFERENCES `grasis`.`review_schedule` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_review_schedule_review_student`
    FOREIGN KEY (`student`)
    REFERENCES `grasis`.`student` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`review_schedule_reviewer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`review_schedule_reviewer` ;

CREATE TABLE IF NOT EXISTS `grasis`.`review_schedule_reviewer` (
  `review_schedule` INT NOT NULL,
  `reviewer` INT NOT NULL,
  PRIMARY KEY (`review_schedule`, `reviewer`),
  INDEX `fk_review_schedule_reviewer_lecturer_idx` (`reviewer` ASC) VISIBLE,
  CONSTRAINT `fk_review_schedule_reviewer_review_schedule`
    FOREIGN KEY (`review_schedule`)
    REFERENCES `grasis`.`review_schedule` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_review_schedule_reviewer_lecturer`
    FOREIGN KEY (`reviewer`)
    REFERENCES `grasis`.`lecturer` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`progress_report_schedule`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`progress_report_schedule` ;

CREATE TABLE IF NOT EXISTS `grasis`.`progress_report_schedule` (
  `_id` INT NOT NULL AUTO_INCREMENT,
  `thesis` INT NOT NULL,
  `topic` INT NULL,
  `time` TIMESTAMP NOT NULL,
  `place` TEXT NOT NULL,
  `lecturer` INT NULL,
  `note` TEXT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modify_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`_id`),
  INDEX `fk_progress_report_schedule_thesis_idx` (`thesis` ASC) VISIBLE,
  INDEX `fk_progress_report_schedule_topic_idx` (`topic` ASC) VISIBLE,
  INDEX `fk_progress_report_schedule_lecturer_idx` (`lecturer` ASC) VISIBLE,
  CONSTRAINT `fk_progress_report_schedule_thesis`
    FOREIGN KEY (`thesis`)
    REFERENCES `grasis`.`thesis` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_progress_report_schedule_topic`
    FOREIGN KEY (`topic`)
    REFERENCES `grasis`.`topic` (`_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_progress_report_schedule_lecturer`
    FOREIGN KEY (`lecturer`)
    REFERENCES `grasis`.`lecturer` (`_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`progress_report_schedule_comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`progress_report_schedule_comment` ;

CREATE TABLE IF NOT EXISTS `grasis`.`progress_report_schedule_comment` (
  `_id` INT NOT NULL AUTO_INCREMENT,
  `progress_report_schedule` INT NOT NULL,
  `student` INT NULL DEFAULT NULL,
  `lecturer` INT NULL DEFAULT NULL,
  `content` TEXT NOT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modify_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`_id`),
  INDEX `fk_progress_report_schedule_comment_progress_report_schedul_idx` (`progress_report_schedule` ASC) VISIBLE,
  INDEX `fk_progress_report_schedule_comment_student_idx` (`student` ASC) VISIBLE,
  INDEX `fk_progress_report_schedule_comment_lecturer_idx` (`lecturer` ASC) VISIBLE,
  CONSTRAINT `fk_progress_report_schedule_comment_progress_report_schedule`
    FOREIGN KEY (`progress_report_schedule`)
    REFERENCES `grasis`.`progress_report_schedule` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_progress_report_schedule_comment_student`
    FOREIGN KEY (`student`)
    REFERENCES `grasis`.`student` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_progress_report_schedule_comment_lecturer`
    FOREIGN KEY (`lecturer`)
    REFERENCES `grasis`.`lecturer` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`progress_report_schedule_student`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`progress_report_schedule_student` ;

CREATE TABLE IF NOT EXISTS `grasis`.`progress_report_schedule_student` (
  `progress_report_schedule` INT NOT NULL,
  `student` INT NOT NULL,
  PRIMARY KEY (`progress_report_schedule`, `student`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`notification`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`notification` ;

CREATE TABLE IF NOT EXISTS `grasis`.`notification` (
  `_id` INT NOT NULL AUTO_INCREMENT,
  `subject` VARCHAR(128) NOT NULL,
  `content` VARCHAR(45) NULL,
  `icon` VARCHAR(128) NULL DEFAULT NULL,
  `status` TINYINT NULL DEFAULT 0 COMMENT '0: unread\n1: read',
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`notification_from_address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`notification_from_address` ;

CREATE TABLE IF NOT EXISTS `grasis`.`notification_from_address` (
  `notification` INT NOT NULL,
  `student` INT NOT NULL,
  `lecturer` INT NOT NULL,
  PRIMARY KEY (`notification`, `student`, `lecturer`),
  INDEX `fk_notification_address_student_idx` (`student` ASC) VISIBLE,
  INDEX `fk_notification_address_lecturer_idx` (`lecturer` ASC) VISIBLE,
  CONSTRAINT `fk_notification_from_address_student`
    FOREIGN KEY (`student`)
    REFERENCES `grasis`.`student` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_notification_from_address_lecturer`
    FOREIGN KEY (`lecturer`)
    REFERENCES `grasis`.`lecturer` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_notification_from_address_notification`
    FOREIGN KEY (`notification`)
    REFERENCES `grasis`.`notification` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grasis`.`notification_to_address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grasis`.`notification_to_address` ;

CREATE TABLE IF NOT EXISTS `grasis`.`notification_to_address` (
  `notification` INT NOT NULL,
  `student` INT NOT NULL,
  `lecturer` INT NOT NULL,
  PRIMARY KEY (`notification`, `student`, `lecturer`),
  INDEX `fk_notification_address_student_idx` (`student` ASC) VISIBLE,
  INDEX `fk_notification_address_lecturer_idx` (`lecturer` ASC) VISIBLE,
  CONSTRAINT `fk_notification_to_address_student`
    FOREIGN KEY (`student`)
    REFERENCES `grasis`.`student` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_notification_to_address_lecturer`
    FOREIGN KEY (`lecturer`)
    REFERENCES `grasis`.`lecturer` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_notification_to_address_notification`
    FOREIGN KEY (`notification`)
    REFERENCES `grasis`.`notification` (`_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
