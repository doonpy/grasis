name: CI

on:
    push:
        branches: [1.0.0]
    pull_request:
        branches: [1.0.0]

jobs:
    lint:
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[skip-ci]')"

        steps:
            - uses: actions/checkout@v2

            - name: Use Node.js 12.x
              uses: actions/setup-node@v1
              env:
                  CI: true
              with:
                  node-version: 12.x

            - name: Cache node modules
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}_checking_${{ env.cache-name }}_${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}_checking_${{ env.cache-name }}_

            - name: Install dependencies
              run: npm ci

            - name: Lint
              run: npm run lint

#    unit-test:
#        runs-on: ubuntu-latest
#        if: "!contains(github.event.head_commit.message, '[skip-ci]')"
#
#        steps:
#            - uses: actions/checkout@v2
#
#            - name: Use Node.js 12.x
#              uses: actions/setup-node@v1
#              env:
#                  CI: true
#              with:
#                  node-version: 12.x
#
#            - name: Cache node modules
#              uses: actions/cache@v2
#              env:
#                  cache-name: cache-node-modules
#              with:
#                  path: '**/node_modules'
#                  key: ${{ runner.os }}-checking-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
#                  restore-keys: |
#                      ${{ runner.os }}-checking-${{ env.cache-name }}-
#
#            - name: Install dependencies
#              run: npm ci
#
#            - name: Test
#              run: npm run test

    build:
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[skip-ci]')"

        steps:
            - uses: actions/checkout@v2

            - name: Use Node.js 12.x
              uses: actions/setup-node@v1
              env:
                  CI: true
              with:
                  node-version: 12.x

            - name: Cache node modules
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-checking-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-checking-${{ env.cache-name }}-

            - name: Install dependencies
              run: npm ci

            - name: Build
              run: npm run build

    database-migration:
      runs-on: ubuntu-latest
      if: "!contains(github.event.head_commit.message, '[skip-ci]')"

      steps:
        - uses: actions/checkout@v2

        - name: Use Node.js 12.x
          uses: actions/setup-node@v1
          env:
            CI: true
          with:
            node-version: 12.x

        - name: Cache node modules
          uses: actions/cache@v2
          env:
            cache-name: cache-node-modules
          with:
            path: '**/node_modules'
            key: ${{ runner.os }}-checking-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-checking-${{ env.cache-name }}-

        - name: Install dependencies
          run: npm ci

        - name: On development database
          run: npm run --prefix api typeorm:migrate
          env:
            DB_TYPE: staging

        - name: On production database
          run: npm run --prefix api typeorm:migrate
          env:
            DB_TYPE: production
