name: CI

on:
  push:
    branches:
      - '1.0.0'
  pull_request:
    branches:
      - '*'

jobs:
    lint:
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[skip-ci]')"

        steps:
            - uses: actions/checkout@v2

            - name: Use Node.js 14.x
              uses: actions/setup-node@v1
              env:
                  CI: true
              with:
                  node-version: 14.x

            - name: Cache node modules
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-${{ env.cache-name }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
                  restore-keys:
                      ${{ runner.os }}-${{ env.cache-name }}-${{ secrets.CACHE_VERSION }}

            - name: Install dependencies
              run: yarn install

            - name: Lint
              run: yarn run lint

    build:
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[skip-ci]')"

        steps:
            - uses: actions/checkout@v2

            - name: Use Node.js 14.x
              uses: actions/setup-node@v1
              env:
                  CI: true
              with:
                  node-version: 14.x

            - name: Cache node modules
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-${{ env.cache-name }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
                  restore-keys:
                      ${{ runner.os }}-${{ env.cache-name }}-${{ secrets.CACHE_VERSION }}

            - name: Install dependencies
              run: yarn install

            - name: Build
              env:
                NODE_ENV: production
              run: yarn run build

